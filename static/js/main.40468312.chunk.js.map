{"version":3,"sources":["components/menu/Menu.module.css","components/content/profile/Profile.module.css","components/content/dialogs/user/User.module.css","components/content/dialogs/message/Message.module.css","components/content/friends/Friends.module.css","redux/profile_reducer.js","api/api.js","redux/auth_reducer.js","components/menu/Menu.jsx","components/header/Header.jsx","components/content/profile/my_posts/MyPosts.jsx","components/content/profile/profile_info/status/Status.jsx","components/content/profile/profile_info/ProfileInfo.jsx","components/HOC/authRedirect.js","components/content/profile/Profile.jsx","components/content/dialogs/user/User.jsx","components/content/dialogs/message/Message.jsx","redux/dialogs_reducer.js","components/content/dialogs/Dialogs.jsx","redux/friends_reducer.js","components/content/friends/Friends.jsx","utils/validators.js","components/common/form-control/input_control/InputControl.jsx","components/login/Login.jsx","App.js","serviceWorker.js","redux/store.js","index.js","components/content/profile/profile_info/ProfileInfo.module.css","components/header/Header.module.css","components/content/profile/my_posts/MyPosts.module.css","components/login/Login.module.css","components/content/profile/profile_info/status/Status.module.css","components/content/dialogs/Dialogs.module.css","components/common/form-control/input_control/InputControl.module.css"],"names":["module","exports","setStatus","status","type","changeFetching","getProfile","id","dispatch","profileAPI","then","data","profileInfo","initialState","posts","post","isFetching","profileReducer","state","action","newPost","instance","axios","withCredentials","headers","baseURL","usersAPI","getUsers","currentPage","pageSize","get","response","follow","userId","unfollow","delete","getStatus","updateStatus","put","updatePhoto","photoFile","formData","FormData","append","authAPI","login","password","rememberMe","captcha","email","changeAuthFetching","setCaptchaUrl","captchaUrl","getLogin","dataProfile","isAuth","authFetching","authReducer","resultCode","Menu","className","s","main","to","React","Component","Header","logo","src","process","align","search","placeholder","this","props","onClick","logout","connect","auth","MyRef","createRef","MyPosts","addPost","bind","e","current","value","preventDefault","undefined","urlUserId","myId","myProfile","avatar","photos","large","map","item","i","arr","key","length","message","fullName","ref","href","noPosts","Status","mode","editStatus","saveStatus","cansel","changeStatus","prevProps","prevState","setState","currentTarget","myStatus","onChange","ProfileInfo","displayChangeAvatar","avatarIsOpen","changeAvatar","openAvatar","files","onMouseMove","onMouseLeave","stopPropagation","name","for","description","avatarFull","authRedirect","RedirectComponent","urlRouterContainer","withRouter","match","params","userid","profilePage","User","users","Message","messages","addMessage","dialogsReducer","dialogsPage","dialogs","CHANGE_FOLLOW","SET_FRIENDS","CHANGE_CURRENT_PAGE","TOGGLE_IS_FEATCHING","TOGGLE_IS_FOLLOW_FEATCHING","friends","followed","small","totalUsersCount","isFollowFetching","followChange","toggleIsFetching","toggleIsFollowFetching","Friends","changeCurrentPage","selected","dataset","text","pagesCount","Math","ceil","friend","some","r","btnFollow","data-id","followPreloader","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","pages","pageClassName","page","previousClassName","previous","nextClassName","next","activeClassName","activePage","friendsPage","a","items","required","InputControl","input","meta","touched","error","active","err","messageError","minLength5","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","errorMessage","postLogin","url","stopSubmit","_error","formOut","style","height","App","exact","path","render","Boolean","window","location","hostname","reducers","combineReducers","filter","formReducer","store","createStore","applyMiddleware","thunkMiddleware","myStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.40468312.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Menu_main__3Zkz8\",\"activeLink\":\"Menu_activeLink__2fQVV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Profile_main__2fnVk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"User_main__3wVYA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Message_main__2wYxg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Friends_main__13uvL\",\"friend\":\"Friends_friend__1lTq4\",\"avatar\":\"Friends_avatar__PWJ2h\",\"btnFollow\":\"Friends_btnFollow__9smQ-\",\"follow\":\"Friends_follow__3VEU0\",\"unfollow\":\"Friends_unfollow__3CLJT\",\"followPreloader\":\"Friends_followPreloader__2JIFJ\",\"pages\":\"Friends_pages__1T5vq\",\"activePage\":\"Friends_activePage__2iQ0I\"};","import {profileAPI} from './../api/api';\r\n\r\n//Конструкторы action============================\r\nconst setProfile = (profileInfo)=>{\r\n    return {\r\n        type: \"setProfile\", \r\n        profileInfo\r\n    }\r\n}\r\nconst setStatus = (status)=>{\r\n    return {\r\n        type: \"setStatus\", \r\n        status\r\n    }\r\n}\r\n\r\nconst changeFetching = (status)=>{\r\n    return {\r\n        type: \"changeFetching\",\r\n        status\r\n    }\r\n}\r\nexport const addPost = (newPost)=>{\r\n    return {\r\n        type: \"add_post\", \r\n        newPost\r\n    }\r\n}\r\n//==================================================\r\nexport const getProfile = (id)=>{\r\n    return (dispatch)=>{\r\n        dispatch(changeFetching(true));\r\n        profileAPI.getProfile(id).then(data=>{\r\n            dispatch(changeFetching(false));\r\n            dispatch(setProfile(data));\r\n        });\r\n    }\r\n}\r\n\r\nexport const getStatus = (id)=>{\r\n    return (dispatch)=>{\r\n        profileAPI.getStatus(id).then(data=>{\r\n            dispatch(setStatus(data));\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateStatus = (status)=>{\r\n    return (dispatch)=>{\r\n        profileAPI.updateStatus(status).then(response=>{\r\n            dispatch(setStatus(status));\r\n        });\r\n    }\r\n}\r\n\r\nexport const updatePhoto = (photoFile, id) => {\r\n    return (dispatch)=>{\r\n        dispatch(changeFetching(true));\r\n        profileAPI.updatePhoto(photoFile).then(response=>{\r\n            dispatch(changeFetching(false));\r\n            dispatch(getProfile(id));\r\n        });\r\n    }\r\n}\r\n\r\n\r\n//Начальный state===================================\r\nlet initialState = {\r\n    profileInfo: null,\r\n    status:\"\",\r\n    posts: [\r\n        {id:1, post:\"hi!!!!!!!!!!!!!\", status:\"added\"},\r\n        {id:2, post:\"Hellooooooo!\", status:\"added\"},\r\n        {id:3, post:\"I'm Andrew!\", status:\"added\"},\r\n    ],\r\n    isFetching: false\r\n}\r\n//===================================================\r\n\r\nconst profileReducer = function(state = initialState,action){ //При изменении состояния мы должны возвращать копию объекта\r\n    switch(action.type){\r\n        case \"add_post\": \r\n            return {      //возвращаем объект\r\n                ...state, //свойства от изначального объекта\r\n                posts: [...state.posts, {id:8, post: action.newPost, status:\"added\" }] //перезаписываем posts, где добавляем новый пост\r\n            }\r\n        case \"setProfile\":\r\n            return {      \r\n                ...state,\r\n                profileInfo: action.profileInfo\r\n            }\r\n        case \"setStatus\":\r\n                return {      \r\n                    ...state,\r\n                    status: action.status\r\n                }\r\n        case \"changeFetching\":\r\n            return {\r\n                ...state,\r\n                isFetching: action.status\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default profileReducer;","import * as axios from 'axios';\r\nimport { addPost } from '../redux/profile_reducer';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: { \r\n        \"API-KEY\": \"07d72dd6-c4bd-4a77-837c-92f8a89a5e10\" \r\n    },\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\"\r\n});\r\n\r\nexport const usersAPI = {\r\n    async getUsers(currentPage=1, pageSize=5){\r\n         let response = await instance.get(`users?page=${currentPage}&count=${pageSize}`);\r\n         return response.data;\r\n    },\r\n    follow(userId){\r\n        return instance.post(`follow/${userId}`);\r\n    },\r\n    unfollow(userId){\r\n        return instance.delete(`follow/${userId}`);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(id){\r\n        return instance.get(`profile/${id}`).then(response=>{\r\n            return response.data;\r\n        });\r\n    },\r\n    getStatus(id){\r\n        return instance.get(`profile/status/${id}`).then(response=>{\r\n            return response.data;\r\n        });\r\n    },\r\n    updateStatus(status){\r\n        return instance.put(`profile/status`,{status: status});\r\n    },\r\n    updatePhoto(photoFile){\r\n        let formData = new FormData();\r\n        formData.append(\"image\",photoFile);\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    getLogin(){\r\n        return instance.get(\"auth/me\").then(response=>{\r\n            return response.data; \r\n        });\r\n    },\r\n    postLogin(login,password,rememberMe,captcha){\r\n        return instance.post(\"auth/login\", {email:login, password, rememberMe,captcha});\r\n    },\r\n    logout(){\r\n        return instance.delete(\"auth/login\");\r\n    },\r\n    getCaptchaUrl(){\r\n        return instance.get(\"security/get-captcha-url\");\r\n    }\r\n}\r\n","import { authAPI } from \"../api/api\";\r\nimport {stopSubmit} from 'redux-form';\r\n//Action=================================================\r\nconst setUser = (dataProfile)=>{\r\n    return {\r\n        type:\"setUser\", \r\n        dataProfile\r\n    }\r\n}\r\nconst changeAuthFetching = (status)=>{\r\n    return {\r\n        type: \"changeAuthFetching\",\r\n        status\r\n    }\r\n}\r\nconst setCaptchaUrl = (captchaUrl)=>{\r\n    return {\r\n        type: \"set_captcha\",\r\n        captchaUrl\r\n    }\r\n}\r\n\r\n//=================================================\r\nexport const getLogin = ()=>{\r\n    return (dispatch)=>{\r\n        dispatch(changeAuthFetching(true));\r\n        authAPI.getLogin().then(data=>{\r\n            dispatch(changeAuthFetching(false));\r\n            dispatch(setUser(data));\r\n        });\r\n    }\r\n}\r\nexport const getCaptchaUrl = ()=>{\r\n    return async (dispatch)=>{\r\n        const response = await authAPI.getCaptchaUrl();\r\n        const captchaUrl = response.data.url;\r\n        dispatch(setCaptchaUrl(captchaUrl));\r\n    }\r\n}\r\nexport const postLogin = (login,password,rememberMe,captcha)=>{\r\n    return (dispatch)=>{\r\n        dispatch(changeAuthFetching(true));\r\n        authAPI.postLogin(login,password,rememberMe, captcha).then(data=>{\r\n            if (data.data.resultCode===0) dispatch(getLogin());\r\n            else {\r\n                if (data.data.resultCode===10) dispatch(getCaptchaUrl());\r\n                dispatch(changeAuthFetching(false));\r\n                dispatch (stopSubmit(\"login\", {_error:data.data.messages[0]}));\r\n            }\r\n        });\r\n    }\r\n}\r\nexport const logout = ()=>{\r\n    return (dispatch)=>{\r\n        dispatch(changeAuthFetching(true));\r\n        authAPI.logout().then(data=>{\r\n            dispatch(getLogin());\r\n            dispatch(setCaptchaUrl(null));\r\n            dispatch(changeAuthFetching(false));\r\n        });\r\n    }\r\n}\r\n\r\n//Начальный state===================================\r\nlet initialState = {\r\n    isAuth: false,\r\n    authFetching: false,\r\n    dataProfile: null,\r\n    captchaUrl: null,\r\n}\r\n//===================================================\r\n\r\nconst authReducer = function(state = initialState, action){\r\n    switch(action.type){\r\n        case \"setUser\":\r\n            return {\r\n                ...state,\r\n                dataProfile: action.dataProfile,\r\n                isAuth: action.dataProfile.resultCode===0?true:false\r\n            }\r\n        case \"set_captcha\":\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.captchaUrl\r\n            }\r\n        case \"changeAuthFetching\":\r\n            return {\r\n                ...state,\r\n                authFetching: action.status\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n","import React from 'react';\r\nimport s from './Menu.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass Menu extends React.Component{\r\n  render(){\r\n    return (\r\n      <div className={s.main}>\r\n        <div><NavLink to=\"/Social-Network/profile\">Profile</NavLink></div>\r\n        <div><NavLink to=\"/Social-Network/friends\">Users</NavLink></div>\r\n        <div><NavLink to=\"/Social-Network/friends\">Dialogs</NavLink></div>\r\n        <div><NavLink to=\"/Social-Network/friends\">Music</NavLink></div>\r\n        <div><NavLink to=\"/Social-Network/friends\">News</NavLink></div>\r\n        <div><NavLink to=\"/Social-Network/friends\">Settings</NavLink></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Menu;\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport { logout } from '../../redux/auth_reducer';\r\n\r\nclass Header extends React.Component{\r\n  render(){\r\n    return (\r\n      <div className={s.main}>    \r\n        <div className={s.logo}>\r\n          <NavLink to=\"/profile\">\r\n              <img src={process.env.PUBLIC_URL +\"/logo.png\"} align=\"top\"/>\r\n              <span>SocialKek</span>\r\n          </NavLink>\r\n        </div>\r\n        <div className={s.search}>\r\n            <input type=\"text\" placeholder=\"Искать здесь...\"/>\r\n            <img src = {process.env.PUBLIC_URL +\"/search_header.png\"}/>\r\n        </div>\r\n        <div className={s.login}>\r\n            <a>{this.props.dataProfile.data.login}</a>\r\n            <p onClick = {this.props.logout}>(выйти)</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n      dataProfile: state.auth.dataProfile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {logout})(Header);","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\n\r\nlet MyRef = React.createRef();\r\n\r\nclass MyPosts extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.addPost = this.addPost.bind(this);\r\n  }\r\n  addPost(e){\r\n    if (MyRef.current.value!=\"\") this.props.addPost(MyRef.current.value);\r\n    e.preventDefault();\r\n    MyRef.current.value = \"\"; \r\n  }\r\n  componentDidMount(){\r\n    let id;\r\n    this.props.urlUserId==undefined?id = this.props.myId:id = this.props.urlUserId;\r\n    this.props.getProfile(id);\r\n  }\r\n  render(){\r\n    let myProfile = this.props.urlUserId===undefined?true:false;\r\n    let avatar = this.props.profileInfo===null||this.props.profileInfo.photos.large===null?`/avatar.jpg`:this.props.profileInfo.photos.large;\r\n    let posts = this.props.posts.map((item,i,arr)=>{\r\n      return(\r\n        <div key = {arr[arr.length-i-1].id} className = {s.post}>\r\n          <div><img src={myProfile===false?`/avatar.jpg`:avatar} align='top'/></div>\r\n          <div className={s.message}>\r\n            <p>{this.props.profileInfo!=null?this.props.profileInfo.fullName:\"\"}</p>\r\n            <p>{arr[arr.length-i-1].post}</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n    return (\r\n      <div className={s.main}>\r\n        {\r\n          myProfile\r\n            ?<div>\r\n                <textarea placeholder=\"Write your Post!\"  ref = {MyRef}></textarea>\r\n                <a href=\"#\" onClick={(e)=>this.addPost(e)}>Добавить запись</a>\r\n                {posts}\r\n             </div>\r\n            :<div className={s.noPosts}>No posts</div>\r\n        }\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport s from './Status.module.css';\r\n\r\nclass Status extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n           mode: \"view\",\r\n           status: this.props.status\r\n        }\r\n        this.editStatus = this.editStatus.bind(this);\r\n        this.saveStatus = this.saveStatus.bind(this);\r\n        this.cansel = this.cansel.bind(this);\r\n        this.changeStatus = this.changeStatus.bind(this);\r\n    }\r\n    componentDidUpdate(prevProps, prevState){\r\n        if (prevProps.status!=this.props.status) this.setState({status: this.props.status});\r\n    }\r\n    editStatus(e){\r\n        this.setState({mode:\"edit\"});\r\n    }\r\n    saveStatus(e){\r\n        this.setState({mode:\"view\"});\r\n        this.props.updateStatus(this.state.status);\r\n\r\n    }\r\n    cansel(e){\r\n        this.setState({mode:\"view\"});\r\n    }\r\n    changeStatus(e){\r\n        this.setState({status: e.currentTarget.value});\r\n    }\r\n    render(){\r\n        let myStatus = this.props.status===null||this.props.status===\"\"\r\n            ? \"Изменить статус\"\r\n            : this.props.status\r\n        return (\r\n            <div className={s.main}>\r\n                {\r\n                    this.props.myProfile===true\r\n                        ? this.state.mode===\"view\"\r\n                            ? <div className = {s.status} onClick = {this.editStatus}>{myStatus}</div>\r\n                            : <div className = {s.editStatus}>\r\n                                <input onChange = {this.changeStatus} value={this.state.status}></input>\r\n                                <span onClick={this.saveStatus}>save</span>\r\n                                <span onClick={this.cansel}>cansel</span>\r\n                              </div>\r\n                        : this.props.status\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Status;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Status from './status/Status';\r\n\r\n\r\n\r\nclass ProfileInfo extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      myProfile: false,\r\n      displayChangeAvatar: false,\r\n      avatarIsOpen: false,\r\n    }\r\n    this.changeAvatar = this.changeAvatar.bind(this);\r\n    this.openAvatar = this.openAvatar.bind(this);\r\n  }\r\n  componentDidMount(){\r\n    let id;\r\n    this.props.urlUserId==undefined?id = this.props.myId:id = this.props.urlUserId;\r\n    this.setState({myProfile: id===this.props.myId?true:false});\r\n    this.props.getProfile(id);\r\n    this.props.getStatus(id);\r\n  }\r\n  changeAvatar(e){\r\n    this.props.updatePhoto(e.currentTarget.files[0],this.props.myId);\r\n  }\r\n  openAvatar(mode){\r\n    this.setState({avatarIsOpen:mode});\r\n  }\r\n  render(){\r\n    let avatar = this.props.profileInfo==null||this.props.profileInfo.photos.large==null\r\n      ? process.env.PUBLIC_URL +\"/avatar_friend.png\"\r\n      : this.props.profileInfo.photos.large;\r\n    return(\r\n      <div className={s.main}>\r\n        <div\r\n           className={s.avatar}\r\n           onMouseMove={()=>{this.setState({displayChangeAvatar: true})}}\r\n           onMouseLeave={()=>{this.setState({displayChangeAvatar: false})}}\r\n           onClick={()=>this.openAvatar(true)}\r\n        >\r\n            {\r\n              this.props.isFetching===false\r\n              ?<img src={avatar}/>\r\n              :<img src={process.env.PUBLIC_URL +\"/preloader.svg\"}/>\r\n            }\r\n            {\r\n              this.state.myProfile&&this.state.displayChangeAvatar\r\n              &&<span className={s.changeAvatar} onClick={(e)=>e.stopPropagation()}>\r\n                  <input type=\"file\" name=\"file\" id=\"file\" onChange={this.changeAvatar}/>\r\n                  <label for=\"file\">Change avatar</label>\r\n                </span>\r\n            }\r\n        </div>\r\n        \r\n        {\r\n          this.props.profileInfo!=null&&\r\n            <div className={s.description}>\r\n              <span className={s.name}>{this.props.profileInfo.fullName}</span>\r\n              <Status status = {this.props.status} myProfile = {this.state.myProfile} updateStatus = {this.props.updateStatus}/>\r\n            </div>\r\n        }\r\n          {\r\n            this.state.avatarIsOpen\r\n            &&<div className={s.avatarFull} onClick={()=>this.openAvatar(false)}>\r\n                <img src={avatar}/>\r\n                <div></div>\r\n              </div>\r\n          }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nconst authRedirect = (Component)=>{\r\n    class RedirectComponent extends React.Component{\r\n        render(){\r\n            if (this.props.isAuth===false) return <Redirect to=\"/login\"/>\r\n            return(\r\n             <Component {...this.props}/>\r\n            );\r\n        }\r\n    }\r\n    let mapToStateAuth = (state)=>{\r\n        return {\r\n            isAuth: state.auth.isAuth\r\n        }\r\n    }\r\n    return connect(mapToStateAuth)(RedirectComponent);\r\n}\r\n\r\nexport default authRedirect;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport { addPost, getProfile, getStatus, updateStatus, updatePhoto } from '../../../redux/profile_reducer';\r\nimport { connect } from 'react-redux';\r\nimport MyPosts from './my_posts/MyPosts';\r\nimport ProfileInfo from './profile_info/ProfileInfo';\r\nimport {withRouter} from 'react-router-dom';\r\nimport authRedirect from '../../HOC/authRedirect';\r\n\r\nfunction Profile(props){\r\n  return (\r\n    <div className={s.main}>\r\n      <ProfileInfo \r\n        status = {props.status} \r\n        myId = {props.myId} \r\n        isFetching = {props.isFetching} \r\n        profileInfo = {props.profileInfo}\r\n        urlUserId = {props.match.params.userid} \r\n        updateStatus = {props.updateStatus}\r\n        getStatus = {props.getStatus} \r\n        getProfile={props.getProfile} \r\n        updatePhoto={props.updatePhoto}\r\n      />\r\n      <MyPosts \r\n        posts = {props.posts} \r\n        addPost={props.addPost}\r\n        myId={props.myId}\r\n        urlUserId = {props.match.params.userid}\r\n        profileInfo = {props.profileInfo}\r\n        getProfile={props.getProfile} \r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        profileInfo: state.profilePage.profileInfo,\r\n        myId: state.auth.dataProfile.data.id,\r\n        isFetching: state.profilePage.isFetching,\r\n        status: state.profilePage.status\r\n    }\r\n}\r\n\r\nlet urlRouterContainer = withRouter(authRedirect(Profile));\r\nexport default connect(mapStateToProps, {addPost, getProfile, getStatus, updateStatus, updatePhoto})(urlRouterContainer); \r\n","import React from 'react';\r\nimport s from './User.module.css';\r\n\r\n\r\nfunction User(props){\r\n  return (\r\n    <div className={s.main}>\r\n        {props.users.map((item)=>{\r\n          return <a href=\"#\">{item.name}</a>\r\n        })}\r\n    </div>\r\n  );\r\n}\r\nexport default User;\r\n","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\nfunction Message(props){\r\n    const MyRef = React.createRef();\r\n    return(\r\n        <div className={s.main}>\r\n           {props.messages.map((item)=>{\r\n                return <p>{item.message}</p>\r\n           })}\r\n           <textarea ref = {MyRef}></textarea>\r\n           <a href=\"#\" onClick = {(e)=>{\r\n               props.addMessage(MyRef.current.value);\r\n               e.preventDefault();\r\n               MyRef.current.value = '';\r\n            }}>\r\n               Отправить сообщение\r\n           </a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n\r\n\r\n\r\n","//Конструкторы action============================\r\n\r\nexport const addMessage = function(message){\r\n    return {\r\n        type:\"add_message\", \r\n        message\r\n    }\r\n}\r\n//=================================================\r\n\r\n//Начальный state===================================\r\nlet initialState = {\r\n    users: [\r\n        {id:1, name:\"Andrew\"},\r\n        {id:2, name:\"Katya\"},\r\n        {id:3, name:\"Nastya\"},\r\n        {id:4, name:\"Peter\"}\r\n    ],\r\n    messages: [\r\n        {id:1, message:\"Hi, Im fine!\"},\r\n        {id:2, message:\"Hello!\"},\r\n        {id:3, message:\"How are u?\"},\r\n        {id:4, message:\"Where are you from?\"},\r\n        {id:5, message:\"It's so cool!\"}, \r\n        {id:6, message:\"I'm from volgograd\"} \r\n    ]\r\n}\r\n//===================================================\r\n\r\nconst dialogsReducer = function(state = initialState, action){\r\n    switch(action.type){\r\n        case \"add_message\":\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages,{id:7, message:action.message}]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default dialogsReducer;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport User from './user/User';\r\nimport Message from './message/Message';\r\nimport { addMessage } from '../../../redux/dialogs_reducer';\r\nimport {connect} from 'react-redux';\r\n\r\nfunction Dialogs(props){\r\n  return (\r\n    <div className={s.main}>\r\n      <div className={s.users}>\r\n          <User users = {props.users}/>\r\n      </div>\r\n      <div className={s.dialogs}>\r\n          <Message messages = {props.messages} addMessage = {props.addMessage}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return { \r\n      messages: state.dialogsPage.messages,\r\n      users: state.dialogsPage.users\r\n  } \r\n}\r\n\r\nexport default connect(mapStateToProps, {addMessage})(Dialogs);\r\n","import { usersAPI } from './../api/api';\r\n\r\nconst CHANGE_FOLLOW = \"friends_reducer/CHANGE_FOLLOW\";\r\nconst SET_FRIENDS = \"friends_reducer/SET_FRIENDS\";\r\nconst CHANGE_CURRENT_PAGE = \"friends_reducer/CHANGE_CURRENT_PAGE\";\r\nconst TOGGLE_IS_FEATCHING = \"friends_reducer/TOGGLE_IS_FEATCHING\";\r\nconst TOGGLE_IS_FOLLOW_FEATCHING = \"friends_reducer/TOGGLE_IS_FOLLOW_FEATCHING\";\r\n\r\nlet initialState = {\r\n    friends: [\r\n        {   \r\n            followed: false,\r\n            id: 5204,\r\n            name: \"noName\",\r\n            photos: {small: null, large: null},\r\n            status: null\r\n        },\r\n    ],\r\n    pageSize: 5,\r\n    totalUsersCount: 1000,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    isFollowFetching: [],\r\n}\r\n\r\nexport default function friendsReducer(state = initialState, action){\r\n    switch(action.type){\r\n        case CHANGE_FOLLOW:\r\n            return {\r\n                ...state,\r\n                friends: [...state.friends].map(item=>{\r\n                    if (action.id==item.id) return {...item, followed: item.followed==true?false:true}\r\n                    return item;\r\n                })\r\n            }\r\n        case SET_FRIENDS:\r\n            return {\r\n                ...state,\r\n                friends: action.arr\r\n            }\r\n        case CHANGE_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.page\r\n            }\r\n        case TOGGLE_IS_FEATCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.status\r\n            }\r\n        case TOGGLE_IS_FOLLOW_FEATCHING:\r\n            return {\r\n                ...state,\r\n                isFollowFetching: [...state.isFollowFetching].some(r=>{return r==action.id})===true\r\n                ?[...state.isFollowFetching].filter(r=>{return r!=action.id})\r\n                :[...state.isFollowFetching, action.id]\r\n                \r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction followChange(id){\r\n    return {\r\n        type: CHANGE_FOLLOW,\r\n        id: id\r\n    }\r\n}\r\nfunction setFriends(arr){\r\n    return {\r\n        type: SET_FRIENDS,\r\n        arr\r\n    }\r\n}\r\nfunction toggleIsFetching(status){\r\n    return {\r\n        type: TOGGLE_IS_FEATCHING,\r\n        status\r\n    }\r\n}\r\nfunction toggleIsFollowFetching(id){\r\n    return {\r\n        type: TOGGLE_IS_FOLLOW_FEATCHING,\r\n        id\r\n    }\r\n}\r\nexport function changeCurrentPage(page){\r\n    return {\r\n        type: CHANGE_CURRENT_PAGE,\r\n        page\r\n    }\r\n}\r\nexport const getUsers = (currentPage, pageSize)=>{\r\n    return async (dispatch)=>{\r\n        dispatch(toggleIsFetching(true));\r\n        let response = await usersAPI.getUsers(currentPage, pageSize);\r\n        dispatch(setFriends(response.items));\r\n        dispatch(toggleIsFetching(false));\r\n    }\r\n}\r\nexport const follow = (id, status)=>{\r\n    return async (dispatch)=>{\r\n        let response;\r\n        dispatch(toggleIsFollowFetching(id));\r\n        status===\"follow\"\r\n          ? response = await usersAPI.unfollow(id)\r\n          : response = await usersAPI.follow(id)\r\n        if (response.data.resultCode==0) dispatch(followChange(id));\r\n        dispatch(toggleIsFollowFetching(id)); \r\n    }   \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Friends.module.css'\r\nimport {connect} from 'react-redux';\r\nimport { follow, getUsers, changeCurrentPage } from '../../../redux/friends_reducer';\r\nimport {NavLink} from 'react-router-dom';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nclass Friends extends React.Component{\r\n    constructor(props){\r\n        super(props); \r\n        this.followChange = this.followChange.bind(this);\r\n        this.changeCurrentPage = this.changeCurrentPage.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n    changeCurrentPage(e){\r\n         this.props.changeCurrentPage(e.selected+1);\r\n         \r\n    }\r\n    componentDidUpdate(prevProps, prevState){\r\n        if (prevProps.currentPage!=this.props.currentPage) this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n    followChange(e){\r\n        let id = e.currentTarget.dataset.id; //id пользователя\r\n        let status = e.currentTarget.text; //follow/unfollow\r\n        this.props.follow(id, status);\r\n        e.preventDefault();\r\n    }\r\n    render(){\r\n        let pagesCount = Math.ceil(this.props.totalUsersCount/this.props.pageSize);\r\n        return(\r\n            <div className ={s.main}>\r\n            {this.props.isFetching==true?<img src={process.env.PUBLIC_URL +'/preloader.svg'}/>:<div>\r\n                {this.props.friends.map((item)=>{\r\n                    return (\r\n                        <div key={item.id} className = {s.friend}>\r\n                            <NavLink to={`/profile/${item.id}`}>\r\n                                <img className = {s.avatar} src={item.photos.small==null?process.env.PUBLIC_URL +'/avatar_friend.png':item.photos.small} align=\"top\"/>\r\n                            </NavLink>\r\n                            <p>{item.name}<br/><br/>\r\n                            {this.props.isFollowFetching.some(r=>{return r==item.id})==false?<a href=\"#\" className={`${s.btnFollow} ${item.followed ? s.follow : s.unfollow}`} data-id={item.id} onClick={this.followChange}>\r\n                                {item.followed ? \"follow\" : \"unfollow\"}\r\n                            </a>:<img className = {s.followPreloader} src={process.env.PUBLIC_URL +\"/preloader.svg\"}/>}\r\n                            </p>\r\n                        </div> \r\n                    );\r\n                })}\r\n            </div>}\r\n            <ReactPaginate\r\n                    previousLabel={'previous'}\r\n                    nextLabel={'next'}\r\n                    breakLabel={'...'}\r\n                    breakClassName={'break-me'}\r\n                    pageCount={pagesCount}\r\n                    marginPagesDisplayed={2}\r\n                    pageRangeDisplayed={5}\r\n                    onPageChange={this.changeCurrentPage}\r\n                    containerClassName={s.pages}\r\n                    pageClassName={s.page}\r\n                    previousClassName={s.previous}\r\n                    nextClassName={s.next}\r\n                    activeClassName={s.activePage}\r\n                 />\r\n            </div>\r\n        );  \r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return { \r\n        friends: state.friendsPage.friends,\r\n        pageSize: state.friendsPage.pageSize,\r\n        totalUsersCount: state.friendsPage.totalUsersCount,\r\n        currentPage: state.friendsPage.currentPage,\r\n        isFetching: state.friendsPage.isFetching,\r\n        isFollowFetching: state.friendsPage.isFollowFetching\r\n    } \r\n}\r\n\r\nexport default connect(mapStateToProps, {getUsers, follow, changeCurrentPage})(Friends);","export const required = value=>{\r\n    if(value) return undefined;\r\n    return \"The field cannot be empty\";\r\n}\r\nexport const minLength = (length)=>(value)=>{\r\n    if(value.length>=length) return undefined;\r\n    return `The field must be at least ${length} characters`\r\n}\r\n","import React from 'react';\r\nimport s from './InputControl.module.css'\r\n\r\nconst InputControl = ({input, meta: { touched, error, active}, ...props})=>{\r\n    let err = touched&!active&error!=undefined?true:false; \r\n    return (\r\n        <div>\r\n            <input {...input} {...props} className = {err && s.error}/>\r\n            {err && <div className = {s.messageError}>{error}</div>}\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default InputControl;","import React from 'react';\r\nimport s from './Login.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport { postLogin } from '../../redux/auth_reducer';\r\nimport { required, minLength } from './../../utils/validators';\r\nimport InputControl from './../common/form-control/input_control/InputControl'\r\n\r\nconst minLength5 = minLength(5);\r\nconst LoginForm =(props)=>{\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={s.logo}>\r\n                <img src={process.env.PUBLIC_URL +\"/logo.png\"} align=\"top\"/>\r\n                <span>SocialKek</span>\r\n            </div>\r\n            <div>\r\n                <Field placeholder=\"login\" name = \"login\" component={InputControl}\r\n                validate = {[required, minLength5]}/> \r\n            </div>\r\n            <div>\r\n                <Field placeholder=\"password\" name=\"password\" component={InputControl}\r\n                type=\"password\" validate = {[required]}/> \r\n            </div>\r\n            <div>\r\n                <Field name=\"rememberMe\" component=\"input\" type=\"checkbox\"/>\r\n                <span>Remember me</span> \r\n            </div>\r\n            {\r\n                props.captchaUrl!=null\r\n                &&<div>\r\n                    <img src={props.captchaUrl}/>\r\n                    <Field name=\"captcha\" component=\"input\" type=\"input\"/>\r\n                  </div>\r\n            }\r\n            \r\n            <p>No account? You can create an <a>account</a></p>\r\n            <div>\r\n                {\r\n                    props.authFetching===false\r\n                    ?<button>Log in</button>\r\n                    :<img src={process.env.PUBLIC_URL +\"/preloader\"}/>\r\n                }\r\n            </div>\r\n            {props.error && <div className = {s.errorMessage}>{props.error}</div> }\r\n        </form>\r\n    );\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: \"login\" })(LoginForm);\r\n\r\nconst Login = (props)=>{\r\n\r\n    const onSubmit = (formData)=>{\r\n        //console.log(formData);\r\n        props.postLogin(formData.login, formData.password, formData.rememberMe=false, formData.captcha)\r\n    }\r\n    return(\r\n        <div>\r\n            <div className = {s.main}></div>\r\n            <div className = {s.formOut} style={props.captchaUrl!=null?{height:\"450px\"}:{}}>\r\n                <LoginReduxForm captchaUrl = {props.captchaUrl} authFetching = {props.authFetching} onSubmit = {onSubmit}/>\r\n            </div>\r\n        </div>  \r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        authFetching: state.auth.authFetching,\r\n        captchaUrl: state.auth.captchaUrl\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {postLogin})(Login); \r\n","import React from 'react';\r\nimport './App.css';\r\nimport {Route, BrowserRouter} from 'react-router-dom';\r\nimport { getLogin } from './redux/auth_reducer';\r\nimport {connect} from 'react-redux';\r\n\r\n//import { domainToASCII } from 'url';\r\nimport Menu from './components/menu/Menu';\r\nimport Header from './components/header/Header';\r\nimport Profile from './components/content/profile/Profile';\r\nimport Dialogs from './components/content/dialogs/Dialogs';\r\nimport Friends from './components/content/friends/Friends';\r\nimport Login from './components/login/Login';\r\n\r\n\r\nclass App extends React.Component {\r\n  componentDidMount(){\r\n    this.props.getLogin();\r\n  }\r\n  render(){\r\n    return(\r\n      <BrowserRouter>\r\n        { \r\n          this.props.authFetching\r\n           ? <img src={process.env.PUBLIC_URL +\"/preloader.svg\"}/>\r\n           : !this.props.isAuth\r\n              ? <Login/>\r\n              : <div className=\"App\">\r\n                    <div className=\"menu\">\r\n                      <Menu />\r\n                    </div>\r\n                    <div className=\"header\">\r\n                      <Header />\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <Route exact path=\"/Social-Network/profile\" render={()=><Profile/>}/>\r\n                        <Route path=\"/Social-Network/profile/:userid\" render={()=><Profile/>}/>\r\n                        <Route path=\"/Social-Network/dialogs\" render={()=><Dialogs/>}/>\r\n                        <Route path=\"/Social-Network/friends\" render={()=><Friends/>}/>\r\n                    </div>\r\n                </div>\r\n        }\r\n      </BrowserRouter>     \r\n    ); \r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n      isAuth: state.auth.isAuth,\r\n      authFetching: state.auth.authFetching\r\n  }\r\n}\r\nexport default connect(mapStateToProps,{getLogin})(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport profileReducer from './profile_reducer';\r\nimport dialogsReducer from \"./dialogs_reducer\";\r\nimport friendsReducer from \"./friends_reducer\";\r\nimport authReducer from \"./auth_reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form'\r\n\r\n\r\nlet reducers = combineReducers({ \r\n    profilePage: profileReducer, \r\n    dialogsPage: dialogsReducer,\r\n    friendsPage: friendsReducer,\r\n    auth: authReducer,\r\n    form: formReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nwindow.myStore = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './redux/store';\r\nimport {Provider} from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store = {store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"ProfileInfo_main__1h5Jx\",\"avatar\":\"ProfileInfo_avatar__2xs63\",\"description\":\"ProfileInfo_description__3hvaE\",\"name\":\"ProfileInfo_name__2AK9J\",\"changeAvatar\":\"ProfileInfo_changeAvatar__2UytI\",\"avatarFull\":\"ProfileInfo_avatarFull__1DW42\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Header_main__omlgk\",\"logo\":\"Header_logo__3tmky\",\"login\":\"Header_login__2JO7h\",\"search\":\"Header_search__2pvlk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"MyPosts_main__1Tj2A\",\"posts\":\"MyPosts_posts__JOwul\",\"post\":\"MyPosts_post__3RuiR\",\"message\":\"MyPosts_message__1Rk0z\",\"noPosts\":\"MyPosts_noPosts__2-vzP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Login_main__mj7iB\",\"formOut\":\"Login_formOut__LOz4z\",\"logo\":\"Login_logo__1Oa6F\",\"errorMessage\":\"Login_errorMessage__3bz4A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"Status_status__tshw6\",\"editStatus\":\"Status_editStatus__1jgzY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Dialogs_main__7yWJw\",\"users\":\"Dialogs_users__3yUjH\",\"dialogs\":\"Dialogs_dialogs__29gAC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageError\":\"InputControl_messageError__fHQPv\",\"error\":\"InputControl_error__3t18B\"};"],"sourceRoot":""}